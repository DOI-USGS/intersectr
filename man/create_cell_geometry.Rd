% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_cell_geometry.R
\name{create_cell_geometry}
\alias{create_cell_geometry}
\title{Create Cell Geometry}
\usage{
create_cell_geometry(x, y, in_prj, out_prj, geom = NULL,
  buffer_dist = 0)
}
\arguments{
\item{x}{numeric center positions of x indices}

\item{y}{numeric center positions of y indices}

\item{prj}{character proj4 string for x and y}
}
\description{
Creates cell geometry from vectors of x and y positions.
}
\examples{
library(RNetCDF)
variable_name <- "precipitation_amount"
nc <- open.nc(system.file("extdata/metdata.nc", package = "intersecter"))
nc_file <- file.inq.nc(nc)
nc_dim <- lapply(seq(0, nc_file$ndims-1), function(d) dim.inq.nc(nc, d))
nc_var <- lapply(seq(0, nc_file$nvars-1), function(v) var.inq.nc(nc, v))
var_names <- sapply(nc_var, function(v) v$name)
print(var_names)
var <- which(var_names == variable_name)
var_atts <- lapply(seq(0, nc_var[[var]]$natts - 1), function(a) att.inq.nc(nc, var - 1, a))
var_att_names <- sapply(var_atts, function(a) a$name)
coordinates <- att.get.nc(nc, var - 1, which(var_att_names == "coordinates") - 1)
print(coordinates)
# Could iomplement general handling for this... hand set for now.
# Either use coordinate variables or standard names for auxiliary coordinate variables.
x_var <- "lon"
y_var <- "lat"

grid_mapping <- att.get.nc(nc, var - 1, "grid_mapping")

if(!is.null(grid_mapping)) {
  in_prj <- ncdfgeom::get_prj(gm_atts)
} else {
  in_prj <- "+init=epsg:4326"
  warning("No grid mapping found. Assuming WGS84")
}

x <- var.get.nc(nc, x_var)
y <- var.get.nc(nc, y_var)

geom <- sf::read_sf(system.file("shape/nc.shp", package = "sf"))

out_prj <- "+init=epsg:5070"

cell_geometry <- create_cell_geometry(x, y, in_prj, out_prj, geom, 1000)

plot(cell_geometry$geometry, lwd = 0.25)
plot(st_transform(geom$geometry, out_prj), add = TRUE)

}
