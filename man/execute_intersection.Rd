% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/execute_intersection.R
\name{execute_intersection}
\alias{execute_intersection}
\title{Execute Intersection}
\usage{
execute_intersection(nc_file, variable_name, intersection_weights,
  cell_geometry, x_var, y_var, t_var, start_datetime = NULL,
  end_datetime = NULL)
}
\arguments{
\item{nc_file}{character path or OPeNDAP URL to NetCDF source}

\item{variable_name}{character name of variable in NetCDF source to access}

\item{intersection_weights}{data.frame as output by
\code{\link{calculate_area_intersection_weights}}}

\item{cell_geometry}{sf data.frame with x_ind and y_ind collumns as output by
\code{\link{create_cell_geometry}}}

\item{x_var}{character variable with X axis data}

\item{y_var}{character variable with Y axis data}

\item{t_var}{character variable with T axis data}

\item{start_datetime}{character or POSIX character format is
\code{\link{strptime}} default e.g. "2010-10-10 10:10:10"}

\item{end_datetime}{character or POSIX}
}
\description{
Traverses many time steps of data applying
intersection weights for each time step.
}
\examples{

library(dplyr)
library(sf)

variable_name <- "precipitation_amount"
x_var <- "lon"
y_var <- "lat"
t_var <- "day"

nc_file <- system.file("extdata/metdata.nc", package = "intersecter")
nc <- RNetCDF::open.nc(nc_file)

x <- RNetCDF::var.get.nc(nc, x_var)
y <- RNetCDF::var.get.nc(nc, y_var)

in_prj <- "+init=epsg:4326"
out_prj <- "+init=epsg:5070"

geom <- read_sf(system.file("shape/nc.shp", package = "sf")) \%>\%
  st_transform(out_prj) \%>\%
  st_buffer(0)

cell_geometry <- create_cell_geometry(x, y, in_prj, geom)

data_source_cells <- st_sf(select(cell_geometry, grid_ids))
target_polygons <- st_sf(select(geom, CNTY_ID))

st_agr(data_source_cells) <- "constant"
st_agr(target_polygons) <- "constant"

area_weights <- calculate_area_intersection_weights(
  data_source_cells,
  target_polygons)

intersected <- execute_intersection(nc_file, variable_name, area_weights,
                                    cell_geometry, x_var, y_var, t_var)

x_inds <- seq(min(cell_geometry$x_ind), max(cell_geometry$x_ind), 1)
y_inds <- seq(min(cell_geometry$y_ind), max(cell_geometry$y_ind), 1)

ids <- intersecter:::get_ids(length(x_inds), length(y_inds))

grid_data <- RNetCDF::var.get.nc(nc, variable_name,
                                 start = c(min(x_inds), min(y_inds), 5),
                                 count = c(length(x_inds), length(y_inds), 1))

grid_data <- data.frame(grid_data = matrix(t(grid_data), # note t() here!!!
                                           ncol = 1,
                                           byrow = TRUE),
                        grid_ids = matrix(ids, ncol = 1))

grid_data$grid_data[grid_data$grid_data < 0] <- NA

grid_data <- left_join(cell_geometry, grid_data, by = "grid_ids")

geom_data <- select(geom, CNTY_ID) \%>\%
  left_join(data.frame(CNTY_ID = as.numeric(names(intersected)[2:ncol(intersected)]),
                       poly_data = as.numeric(intersected[5, 2:ncol(intersected)])), by = "CNTY_ID")

geom_data <- st_transform(geom_data, st_crs(grid_data))

breaks <- c(0, 0.5, 1, 2, 3, 5, 10)

plot(grid_data$geometry)

plot(grid_data["grid_data"], border = NA, breaks = breaks, add = TRUE)

plot(geom_data["poly_data"], breaks = breaks, add = TRUE)

plot(grid_data$geometry, lwd = 0.1, add = TRUE)

}
