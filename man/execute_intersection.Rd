% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/execute_intersection.R
\name{execute_intersection}
\alias{execute_intersection}
\title{Execute Intersection}
\usage{
execute_intersection(nc_file, variable_name, intersection_weights,
  cell_geometry, x_var, y_var, t_var, start_datetime = NULL,
  end_datetime = NULL)
}
\arguments{
\item{nc_file}{character path or OPeNDAP URL to NetCDF source}

\item{variable_name}{character name of variable in NetCDF source to access}

\item{intersection_weights}{data.frame as output by
\code{\link{calculate_area_intersection_weights}}}

\item{cell_geometry}{sf data.frame with X_ind and Y_ind columns as output by
\code{\link{create_cell_geometry}}}

\item{x_var}{character variable with X axis data}

\item{y_var}{character variable with Y axis data}

\item{t_var}{character variable with T axis data}

\item{start_datetime}{character or POSIX character format is
\code{\link{strptime}} default e.g. "2010-10-10 10:10:10"}

\item{end_datetime}{character or POSIX}
}
\description{
Traverses many time steps of data applying
intersection weights for each time step.
}
\examples{
nc_file <- system.file("extdata/metdata.nc", package = "intersectr")
nc <- RNetCDF::open.nc(nc_file)

variable_name <- "precipitation_amount"
(cv <- ncmeta::nc_coord_var(nc, variable_name))

geom <- sf::read_sf(system.file("shape/nc.shp", package = "sf"))[20, ]
geom <- sf::st_transform(geom, "+init=epsg:5070")

cell_geometry <-
  create_cell_geometry(X_coords = RNetCDF::var.get.nc(nc, cv$X, unpack = TRUE),
                       Y_coords = RNetCDF::var.get.nc(nc, cv$Y, unpack = TRUE),
                       prj = ncmeta::nc_gm_to_prj(ncmeta::nc_grid_mapping_atts(nc)),
                       geom = geom,
                       buffer_dist = 2000)

plot(sf::st_transform(sf::st_geometry(cell_geometry), "+init=epsg:5070"))
plot(sf::st_geometry(geom), add = TRUE)

area_weights <- calculate_area_intersection_weights(
  sf::st_sf(dplyr::select(cell_geometry, grid_ids), agr = "constant"),
  sf::st_sf(dplyr::select(geom, NAME), agr = "constant"))

execute_intersection(nc_file, variable_name, area_weights,
                     cell_geometry, cv$X, cv$Y, cv$T)

}
